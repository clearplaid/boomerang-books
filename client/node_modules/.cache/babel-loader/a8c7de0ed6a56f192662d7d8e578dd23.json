{"ast":null,"code":"var _jsxFileName = \"/home/scott/Desktop/Code/boomerang/client/src/pages/Search.js\";\nimport React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport axios from \"axios\";\n\nrequire(\"dotenv\").config();\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_BOOKS_API_KEY;\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSearch = event => {\n      event.preventDefault();\n      app.post(\"/search\", (req, res) => {\n        // take user searched title replace white space with + for the url search to work properly\n        let bookTitle = req.body.title.replace(/\\s/g, \"+\");\n        axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + bookTitle + \"&key=\" + API_KEY).then(response => {\n          res.json(response.data.items);\n        }).catch(error => {\n          res.json({\n            error: error\n          });\n        });\n      });\n    };\n\n    this.state = {\n      inputTitle: \"\",\n      bookData: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleChange: this.handleChange,\n      handleSearch: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), this.state.bookData.length > 0 ? React.createElement(Results, {\n      bookData: this.state.bookData,\n      path: this.props.match.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/scott/Desktop/Code/boomerang/client/src/pages/Search.js"],"names":["React","Form","Results","axios","require","config","API_KEY","process","env","REACT_APP_GOOGLE_BOOKS_API_KEY","Search","Component","constructor","props","handleChange","event","target","name","value","setState","handleSearch","preventDefault","app","post","req","res","bookTitle","body","title","replace","get","then","response","json","data","items","catch","error","state","inputTitle","bookData","render","length","match","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,8BAA5B;;AAEA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQJC,KAAK,IAAI;AAAA,4BACEA,KAAK,CAACC,MADR;AAAA,YACdC,IADc,iBACdA,IADc;AAAA,YACRC,KADQ,iBACRA,KADQ;AAEtB,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAd;AACD,KAXkB;;AAAA,SAanBE,YAbmB,GAaJL,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACAC,MAAAA,GAAG,CAACC,IAAJ,CAAS,SAAT,EAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChC;AACA,YAAIC,SAAS,GAAGF,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAeC,OAAf,CAAuB,KAAvB,EAA8B,GAA9B,CAAhB;AACA1B,QAAAA,KAAK,CAAC2B,GAAN,CAAU,mDAAmDJ,SAAnD,GAA+D,OAA/D,GAAyEpB,OAAnF,EACGyB,IADH,CAEKC,QAAD,IAAc;AACZP,UAAAA,GAAG,CAACQ,IAAJ,CAASD,QAAQ,CAACE,IAAT,CAAcC,KAAvB;AACD,SAJL,EAKGC,KALH,CAMKC,KAAD,IAAW;AACTZ,UAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACI,YAAAA,KAAK,EAAEA;AAAR,WAAT;AACD,SARL;AASD,OAZD;AAaD,KA5BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAwBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,KAAK3B,YAAzB;AAAuC,MAAA,YAAY,EAAE,KAAKM,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGI,KAAKkB,KAAL,CAAWE,QAAX,CAAoBE,MAApB,GAA6B,CAA9B,GACC,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWE,QAA9B;AAAwC,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAW8B,KAAX,CAAiBC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAC2E,IAJ9E,CADF;AASD;;AAzCkC;;AA4CrC,eAAelC,MAAf","sourcesContent":["import React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport axios from \"axios\";\nrequire(\"dotenv\").config();\nconst API_KEY = process.env.REACT_APP_GOOGLE_BOOKS_API_KEY;\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputTitle: \"\",\n      bookData: []\n    }\n  }\n  \n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSearch = event => {\n    event.preventDefault();\n    app.post(\"/search\", (req, res) => {\n      // take user searched title replace white space with + for the url search to work properly\n      let bookTitle = req.body.title.replace(/\\s/g, \"+\");\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + bookTitle + \"&key=\" + API_KEY)\n        .then(\n          (response) => {\n            res.json(response.data.items)\n          })\n        .catch (\n          (error) => {\n            res.json({error: error})\n          })\n    })\n  }\n\n  render() {\n    return (\n      <main>\n        <Form handleChange={this.handleChange} handleSearch={this.handleSearch} />\n\n        {(this.state.bookData.length > 0) ?\n          <Results bookData={this.state.bookData} path={this.props.match.path} /> : null\n        }\n      </main>\n    )\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}